// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyAB3LEiRQM8twIIhAP2J0gq2S88xxw4-cE',
    appId: '1:1014251110563:web:e5e9be6300e9e29ef6ff16',
    messagingSenderId: '1014251110563',
    projectId: 'gecw-cycles',
    authDomain: 'gecw-cycles.firebaseapp.com',
    storageBucket: 'gecw-cycles.firebasestorage.app',
    measurementId: 'G-J9XCGQ7262',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyC_wmflQu4qHyqStC6PapK49_JhwLzmV3U',
    appId: '1:1014251110563:android:d3818c82c0180198f6ff16',
    messagingSenderId: '1014251110563',
    projectId: 'gecw-cycles',
    storageBucket: 'gecw-cycles.firebasestorage.app',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyAB3LEiRQM8twIIhAP2J0gq2S88xxw4-cE',
    appId: '1:1014251110563:web:c861141667ce5c9cf6ff16',
    messagingSenderId: '1014251110563',
    projectId: 'gecw-cycles',
    authDomain: 'gecw-cycles.firebaseapp.com',
    storageBucket: 'gecw-cycles.firebasestorage.app',
    measurementId: 'G-QZ4L6FDK18',
  );
}
